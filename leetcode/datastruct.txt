
数据结构:
1.vector用法
   vector是C++标准模板库中的部分内容，它是一个多功能的，能够操作多种数据结构和算法的模板类和函数库。vector之所以被认为是一个容器，
   是因为它能够像容器一样存放各种类型的对象，简单地说，vector是一个能够存放任意类型的动态数组，能够增加和压缩数据。
2.string用法
   string是一个字符串类，string查找替换、分割字符串、比较、截取、类型转换、排序等功能都提供了强大的处理函数，可以代替字符数组来使用。

3.stack用法
   堆栈是一个线性表，插入和删除只在表的一端进行。这一端称为栈顶(Stack Top)，另一端则为栈底(Stack Bottom)。堆栈的元素插入称为入栈，元素的删除称为出栈。
   由于元素的入栈和出栈总在栈顶进行，因此，堆栈是一个后进先出(Last In First Out)表，即 LIFO 表。
4.list用法
   list是一种序列式容器。list容器完成的功能实际上和数据结构中的双向链表是极其相似的，list中的数据元素是通过链表指针串连成逻辑意义上的线性表，
   也就是list也具有链表的主要优点，即：在链表的任一位置进行元素的插入、删除操作都是快速的。list的实现大概是这样的：list的每个节点有三个域：
   前驱元素指针域、数据域和后继元素指针域。前驱元素指针域保存了前驱元素的首地址；数据域则是本节点的数据；后继元素指针域则保存了后继元素的首地址。
   其实，list和循环链表也有相似的地方，即：头节点的前驱元素指针域保存的是链表中尾元素的首地址，list的尾节点的后继元素指针域则保存了头节点的首地址，
   这样，list实际上就构成了一个双向循环链表。

5.deque queu
   deque双端队列容器(double-ended queue)与vector非常相似，算法的时间复杂度也是常数阶O(1)，deque内部的数据机制和执行性能与vector不同，
   一般说来，当考虑到容器元素的内存分配策略和操作的性能时，deque相对vector较为有优势。deque双端队列采用分块的线性结构来存储数据，
   具有高效的删除首尾元素的函数，由于deque容器是以deque块为单位进行内存的分配，并使用了二级的Map进行管理，
   因此不容易实现类似于vector的capacity和reverse函数，而且deque容器也不需要这样的获取和调整容器大小的函数。
6.map、multimap、unordered_map、unordered_multimap 用法
   https://blog.csdn.net/cly141220010/article/details/104622597?utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link
   Map是STL的一个关联容器，它提供一对一（其中第一个可以称为关键字，每个关键字只能在map中出现一次，第二个可能称为该关键字的值）的数据 处理能力，
   由于这个特性，它完成有可能在我们处理一对一数据的时候，在编程上提供快速通道。
   这里说下map内部数据的组织，map内部自建一颗红黑树 (一 种非严格意义上的平衡二叉树)
   这颗树具有对数据自动排序的功能，所以在map内部所有的数据都是有序的，后边我们会见识到有序的好处。
   map 
   优点： 
   有序性，这是map结构最大的优点，其元素的有序性在很多应用中都会简化很多的操作
   红黑树，内部实现一个红黑书使得map的很多操作在的时间复杂度下就可以实现，因此效率非常的高
   缺点： 
   空间占用率高，因为map内部实现了红黑树，虽然提高了运行效率，但是因为每一个节点都需要额外保存父节点，孩子节点以及红/黑性质，
   使得每一个节点都占用大量的空间
   适用处，对于那些有顺序要求的问题，用map会更高效一些
   unordered_map 
   优点： 
   因为内部实现了哈希表，因此其查找速度非常的快
   缺点： 
   哈希表的建立比较耗费时间
   适用处，对于查找问题，unordered_map会更加高效一些，因此遇到查找问题，常会考虑一下用unordered_map
8.set 、unorderset、 multiset用法
   set是STL中一种标准关联容器。它底层使用平衡的搜索树——红黑树实现，插入删除操作时仅仅需要指针操作节点即可完成，不涉及到内存移动和拷贝，
   所以效率比较高。set，顾名思义是“集合”的意思，在set中元素都是唯一的，而且默认情况下会对元素自动进行升序排列，支持集合的交(set_intersection),
   差(set_difference) 并(set_union)，对称差(set_symmetric_difference) 等一些集合上的操作，
   如果需要集合中的元素允许重复那么可以使用multiset
   unorderset
   C++ 11中对unordered_set描述大体如下：无序集合容器（unordered_set）是一个存储唯一(unique，即无重复）的关联容器（Associative container），
   容器中的元素无特别的秩序关系，该容器允许基于值的快速元素检索，同时也支持正向迭代。
   在一个unordered_set内部，元素不会按任何顺序排序，而是通过元素值的hash值将元素分组放置到各个槽(Bucker，也可以译为“桶”），
   这样就能通过元素值快速访问各个对应的元素（均摊耗时为O（1））。